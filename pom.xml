<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>2.1.8.RELEASE</version>
    </parent>

    <groupId>com.asa.example</groupId>
    <artifactId>maven-in-action</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>maven-domain</module>
        <module>maven-utils</module>
        <module>maven-service</module>
        <module>maven-starter</module>
    </modules>
    <packaging>pom</packaging>

    <properties>
        <ecerp.ewms.snapshot.version>1.0-SNAPSHOT</ecerp.ewms.snapshot.version>
        <java.version>1.8</java.version>
    </properties>

    <!--以下仓库是内网的，如果不能访问内网的话，那么大概率是会出错的-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.asa.example</groupId>
                <artifactId>maven-model</artifactId>
                <version>${ecerp.ewms.snapshot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.asa.example</groupId>
                <artifactId>maven-bean</artifactId>
                <version>${ecerp.ewms.snapshot.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <package.environment>dev</package.environment>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>test</id>
            <properties>
                <package.environment>test</package.environment>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <package.environment>prod</package.environment>
            </properties>
        </profile>

    </profiles>

    <build>
        <resources>
            <!-- 先对主资源目录进行过滤。env 下的所有内容都不打包 -->
            <resource>
                <directory>src/main/resources/</directory>
                <excludes>
                    <exclude>env/</exclude>
                </excludes>
            </resource>
            <!-- 之后再根据配置选择具体的 env 目录，maven 会根据该配置复制到资源根目录 -->
            <resource>
                <directory>src/main/resources/env/${package.environment}</directory>
            </resource>
        </resources>


        <pluginManagement>
            <plugins>
                <!-- 别的plugin写在下面*位置 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                    <executions>
                        <execution>
                            <id>copy-resources</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <!-- 覆盖原有文件 -->
                                <overwrite>true</overwrite>
                                <!--没有地方有该配置，但是依旧好用，原因未知-->
                                <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                <!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） <outputDirectory>target/classes</outputDirectory> -->
                                <!-- 待处理的资源定义 -->
                                <resources>
                                    <resource>
                                        <!-- 指定resources插件处理哪个目录下的资源文件 -->
                                        <directory>src/main/resources/env/${package.environment}</directory>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!--over-->
            </plugins>
        </pluginManagement>
    </build>
</project>